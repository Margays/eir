name: Create GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  pull-requests: write

jobs:
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Update version in Cargo.toml
        run: |
          TAG_VERSION=${GITHUB_REF_NAME#v}
          sed -i "s/^version = \".*\"/version = \"$TAG_VERSION\"/" Cargo.toml
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build binary
        run: |
          cargo build --release

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release with gh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "$GITHUB_REF_NAME" \
            --title "Release $GITHUB_REF_NAME" \
            --generate-notes \
            --fail-on-no-commits \
            target/release/eir

  push_to_registry:
    needs: [create_release]
    name: Docker Hub Release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Update version in Cargo.toml
        run: |
          TAG_VERSION=${GITHUB_REF_NAME#v}
          sed -i "s/^version = \".*\"/version = \"$TAG_VERSION\"/" Cargo.toml
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: margays/eir

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/margays/eir
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  publish_helm_chart:
    needs: [push_to_registry]
    name: Publish Helm Chart to chart repository
    runs-on: ubuntu-latest
    environment: chart-repository
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          path: source


      - name: Clone chart repository
        uses: actions/checkout@v4
        with:
          repository: Margays/charts
          path: charts
          token: ${{ secrets.GH_CHART_TOKEN }}

      - name: Copy Helm chart
        run: |
          rm -rf ./charts/charts/eir
          mkdir ./charts/charts/eir
          cp -R ./source/helm/* ./charts/charts/eir/

      - name: Update Helm chart version
        env:
          TAG_VERSION: ${{ github.ref_name }}
        run: |
          cd ./charts/charts/eir
          yq eval -i '.version = (strenv(TAG_VERSION) | sub("v"; ""))' Chart.yaml
          yq eval -i '.appVersion = strenv(TAG_VERSION)' Chart.yaml
          yq eval -i '.image.tag = strenv(TAG_VERSION)' values.yaml

      - name: Publish chart
        run: |
          cd ./charts/eir
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update Eir Helm chart for version $TAG_VERSION"
          git push origin main
